package de.ellpeck.actuallyadditions.common.items;

import de.ellpeck.actuallyadditions.common.ActuallyAdditions;
import de.ellpeck.actuallyadditions.common.blocks.ActuallyBlocks;
import net.minecraft.block.Block;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.function.Supplier;

public class ActuallyItems {
    public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, ActuallyAdditions.MOD_ID);

    public static final RegistryObject<Item> itemCrystalClusterRedstone = ITEMS.register("crystal_cluster_redstone_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterRedstone));
    public static final RegistryObject<Item> itemCrystalClusterLapis = ITEMS.register("crystal_cluster_lapis_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterLapis));
    public static final RegistryObject<Item> itemCrystalClusterDiamond = ITEMS.register("crystal_cluster_diamond_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterDiamond));
    public static final RegistryObject<Item> itemCrystalClusterCoal = ITEMS.register("crystal_cluster_coal_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterCoal));
    public static final RegistryObject<Item> itemCrystalClusterEmerald = ITEMS.register("crystal_cluster_emerald_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterEmerald));
    public static final RegistryObject<Item> itemCrystalClusterIron = ITEMS.register("crystal_cluster_iron_block", () -> makeItem(ActuallyBlocks.blockCrystalClusterIron));
    public static final RegistryObject<Item> itemBatteryBox = ITEMS.register("battery_box_block", () -> makeItem(ActuallyBlocks.blockBatteryBox));
    public static final RegistryObject<Item> itemItemViewerHopping = ITEMS.register("item_viewer_hopping_block", () -> makeItem(ActuallyBlocks.blockItemViewerHopping));
    public static final RegistryObject<Item> itemFarmer = ITEMS.register("farmer_block", () -> makeItem(ActuallyBlocks.blockFarmer));
    public static final RegistryObject<Item> itemBioReactor = ITEMS.register("bio_reactor_block", () -> makeItem(ActuallyBlocks.blockBioReactor));
    public static final RegistryObject<Item> itemEmpowerer = ITEMS.register("empowerer_block", () -> makeItem(ActuallyBlocks.blockEmpowerer));
    public static final RegistryObject<Item> itemTinyTorch = ITEMS.register("tiny_torch_block", () -> makeItem(ActuallyBlocks.blockTinyTorch));
    public static final RegistryObject<Item> itemShockSuppressor = ITEMS.register("shock_suppressor_block", () -> makeItem(ActuallyBlocks.blockShockSuppressor));
    public static final RegistryObject<Item> itemDisplayStand = ITEMS.register("display_stand_block", () -> makeItem(ActuallyBlocks.blockDisplayStand));
    public static final RegistryObject<Item> itemPlayerInterface = ITEMS.register("player_interface_block", () -> makeItem(ActuallyBlocks.blockPlayerInterface));
    public static final RegistryObject<Item> itemItemViewer = ITEMS.register("item_viewer_block", () -> makeItem(ActuallyBlocks.blockItemViewer));
    public static final RegistryObject<Item> itemFireworkBox = ITEMS.register("firework_box_block", () -> makeItem(ActuallyBlocks.blockFireworkBox));
    public static final RegistryObject<Item> itemMiner = ITEMS.register("miner_block", () -> makeItem(ActuallyBlocks.blockMiner));
    public static final RegistryObject<Item> itemAtomicReconstructor = ITEMS.register("atomic_reconstructor_block", () -> makeItem(ActuallyBlocks.blockAtomicReconstructor));
    public static final RegistryObject<Item> itemCrystalQuarts = ITEMS.register("crystal_quarts_block", () -> makeItem(ActuallyBlocks.blockCrystalQuarts));
    public static final RegistryObject<Item> itemCrystalRedstone = ITEMS.register("crystal_redstone_block", () -> makeItem(ActuallyBlocks.blockCrystalRedstone));
    public static final RegistryObject<Item> itemCrystalLapis = ITEMS.register("crystal_lapis_block", () -> makeItem(ActuallyBlocks.blockCrystalLapis));
    public static final RegistryObject<Item> itemCrystalDiamond = ITEMS.register("crystal_diamond_block", () -> makeItem(ActuallyBlocks.blockCrystalDiamond));
    public static final RegistryObject<Item> itemCrystalVoid = ITEMS.register("crystal_void_block", () -> makeItem(ActuallyBlocks.blockCrystalVoid));
    public static final RegistryObject<Item> itemCrystalEmerald = ITEMS.register("crystal_emerald_block", () -> makeItem(ActuallyBlocks.blockCrystalEmerald));
    public static final RegistryObject<Item> itemCrystalEmpoweredQuarts = ITEMS.register("crystal_quarts_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredQuarts));
    public static final RegistryObject<Item> itemCrystalEmpoweredRedstone = ITEMS.register("crystal_redstone_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredRedstone));
    public static final RegistryObject<Item> itemCrystalEmpoweredLapis = ITEMS.register("crystal_lapis_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredLapis));
    public static final RegistryObject<Item> itemCrystalEmpoweredDiamond = ITEMS.register("crystal_diamond_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredDiamond));
    public static final RegistryObject<Item> itemCrystalEmpoweredVoid = ITEMS.register("crystal_void_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredVoid));
    public static final RegistryObject<Item> itemCrystalEmpoweredEmerald = ITEMS.register("crystal_emerald_empowered_block", () -> makeItem(ActuallyBlocks.blockCrystalEmpoweredEmerald));
    public static final RegistryObject<Item> itemBlackLotus = ITEMS.register("black_lotus_block", () -> makeItem(ActuallyBlocks.blockBlackLotus));
    public static final RegistryObject<Item> itemLaserRelay = ITEMS.register("laser_relay_block", () -> makeItem(ActuallyBlocks.blockLaserRelay));
    public static final RegistryObject<Item> itemLaserRelayAdvanced = ITEMS.register("laser_relay_advanced_block", () -> makeItem(ActuallyBlocks.blockLaserRelayAdvanced));
    public static final RegistryObject<Item> itemLaserRelayExtreme = ITEMS.register("laser_relay_extreme_block", () -> makeItem(ActuallyBlocks.blockLaserRelayExtreme));
    public static final RegistryObject<Item> itemLaserRelayFluids = ITEMS.register("laser_relay_fluids_block", () -> makeItem(ActuallyBlocks.blockLaserRelayFluids));
    public static final RegistryObject<Item> itemLaserRelayItem = ITEMS.register("laser_relay_item_block", () -> makeItem(ActuallyBlocks.blockLaserRelayItem));
    public static final RegistryObject<Item> itemLaserRelayItemWhitelist = ITEMS.register("laser_relay_item_whitelist_block", () -> makeItem(ActuallyBlocks.blockLaserRelayItemWhitelist));
    public static final RegistryObject<Item> itemRangedCollector = ITEMS.register("ranged_collector_block", () -> makeItem(ActuallyBlocks.blockRangedCollector));
    public static final RegistryObject<Item> itemDirectionalBreaker = ITEMS.register("directional_breaker_block", () -> makeItem(ActuallyBlocks.blockDirectionalBreaker));
    public static final RegistryObject<Item> itemLeafGenerator = ITEMS.register("leaf_generator_block", () -> makeItem(ActuallyBlocks.blockLeafGenerator));
    public static final RegistryObject<Item> itemSmileyCloud = ITEMS.register("smiley_cloud_block", () -> makeItem(ActuallyBlocks.blockSmileyCloud));
    public static final RegistryObject<Item> itemXPSolidifier = ITEMS.register("xp_solidifier_block", () -> makeItem(ActuallyBlocks.blockXPSolidifier));
    public static final RegistryObject<Item> itemTestifiBucksGreenWall = ITEMS.register("green_wall_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksGreenWall));
    public static final RegistryObject<Item> itemTestifiBucksWhiteWall = ITEMS.register("white_wall_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksWhiteWall));
    public static final RegistryObject<Item> itemTestifiBucksGreenStairs = ITEMS.register("green_stairs_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksGreenStairs));
    public static final RegistryObject<Item> itemTestifiBucksWhiteStairs = ITEMS.register("white_stairs_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksWhiteStairs));
    public static final RegistryObject<Item> itemTestifiBucksGreenSlab = ITEMS.register("green_slab_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksGreenSlab));
    public static final RegistryObject<Item> itemTestifiBucksWhiteSlab = ITEMS.register("white_slab_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksWhiteSlab));
    public static final RegistryObject<Item> itemTestifiBucksGreenFence = ITEMS.register("green_fence_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksGreenFence));
    public static final RegistryObject<Item> itemTestifiBucksWhiteFence = ITEMS.register("white_fence_block", () -> makeItem(ActuallyBlocks.blockTestifiBucksWhiteFence));
    public static final RegistryObject<Item> ITEM_LAMP_WHITE = ITEMS.register("lamp_white_block", () -> makeItem(ActuallyBlocks.LAMP_WHITE));
    public static final RegistryObject<Item> ITEM_LAMP_ORANGE = ITEMS.register("lamp_orange_block", () -> makeItem(ActuallyBlocks.LAMP_ORANGE));
    public static final RegistryObject<Item> ITEM_LAMP_MAGENTA = ITEMS.register("lamp_magenta_block", () -> makeItem(ActuallyBlocks.LAMP_MAGENTA));
    public static final RegistryObject<Item> ITEM_LAMP_LIGHT_BLUE = ITEMS.register("lamp_light_blue_block", () -> makeItem(ActuallyBlocks.LAMP_LIGHT_BLUE));
    public static final RegistryObject<Item> ITEM_LAMP_YELLOW = ITEMS.register("lamp_yellow_block", () -> makeItem(ActuallyBlocks.LAMP_YELLOW));
    public static final RegistryObject<Item> ITEM_LAMP_LIME = ITEMS.register("lamp_lime_block", () -> makeItem(ActuallyBlocks.LAMP_LIME));
    public static final RegistryObject<Item> ITEM_LAMP_PINK = ITEMS.register("lamp_pink_block", () -> makeItem(ActuallyBlocks.LAMP_PINK));
    public static final RegistryObject<Item> ITEM_LAMP_GRAY = ITEMS.register("lamp_gray_block", () -> makeItem(ActuallyBlocks.LAMP_GRAY));
    public static final RegistryObject<Item> ITEM_LAMP_LIGHT_GRAY = ITEMS.register("lamp_light_gray_block", () -> makeItem(ActuallyBlocks.LAMP_LIGHT_GRAY));
    public static final RegistryObject<Item> ITEM_LAMP_CYAN = ITEMS.register("lamp_cyan_block", () -> makeItem(ActuallyBlocks.LAMP_CYAN));
    public static final RegistryObject<Item> ITEM_LAMP_PURPLE = ITEMS.register("lamp_purple_block", () -> makeItem(ActuallyBlocks.LAMP_PURPLE));
    public static final RegistryObject<Item> ITEM_LAMP_BLUE = ITEMS.register("lamp_blue_block", () -> makeItem(ActuallyBlocks.LAMP_BLUE));
    public static final RegistryObject<Item> ITEM_LAMP_BROWN = ITEMS.register("lamp_brown_block", () -> makeItem(ActuallyBlocks.LAMP_BROWN));
    public static final RegistryObject<Item> ITEM_LAMP_GREEN = ITEMS.register("lamp_green_block", () -> makeItem(ActuallyBlocks.LAMP_GREEN));
    public static final RegistryObject<Item> ITEM_LAMP_RED = ITEMS.register("lamp_red_block", () -> makeItem(ActuallyBlocks.LAMP_RED));
    public static final RegistryObject<Item> ITEM_LAMP_BLACK = ITEMS.register("lamp_black_block", () -> makeItem(ActuallyBlocks.LAMP_BLACK));
    public static final RegistryObject<Item> itemLampPowerer = ITEMS.register("lamp_powerer_block", () -> makeItem(ActuallyBlocks.blockLampPowerer));
    public static final RegistryObject<Item> itemTreasureChest = ITEMS.register("treasure_chest_block", () -> makeItem(ActuallyBlocks.blockTreasureChest));
    public static final RegistryObject<Item> itemEnergizer = ITEMS.register("energizer_block", () -> makeItem(ActuallyBlocks.blockEnergizer));
    public static final RegistryObject<Item> itemEnervator = ITEMS.register("enervator_block", () -> makeItem(ActuallyBlocks.blockEnervator));
    public static final RegistryObject<Item> itemLavaFactoryController = ITEMS.register("lava_factory_controller_block", () -> makeItem(ActuallyBlocks.blockLavaFactoryController));
    public static final RegistryObject<Item> itemCanolaPress = ITEMS.register("canola_press_block", () -> makeItem(ActuallyBlocks.blockCanolaPress));
    public static final RegistryObject<Item> itemPhantomface = ITEMS.register("phantomface_block", () -> makeItem(ActuallyBlocks.blockPhantomface));
    public static final RegistryObject<Item> itemPhantomPlacer = ITEMS.register("phantom_placer_block", () -> makeItem(ActuallyBlocks.blockPhantomPlacer));
    public static final RegistryObject<Item> itemPhantomLiquiface = ITEMS.register("phantom_liquiface_block", () -> makeItem(ActuallyBlocks.blockPhantomLiquiface));
    public static final RegistryObject<Item> itemPhantomEnergyface = ITEMS.register("phantom_energyface_block", () -> makeItem(ActuallyBlocks.blockPhantomEnergyface));
    public static final RegistryObject<Item> itemPhantomRedstoneface = ITEMS.register("phantom_redstoneface_block", () -> makeItem(ActuallyBlocks.blockPhantomRedstoneface));
    public static final RegistryObject<Item> itemPhantomBreaker = ITEMS.register("phantom_breaker_block", () -> makeItem(ActuallyBlocks.blockPhantomBreaker));
    public static final RegistryObject<Item> itemCoalGenerator = ITEMS.register("coal_generator_block", () -> makeItem(ActuallyBlocks.blockCoalGenerator));
    public static final RegistryObject<Item> itemOilGenerator = ITEMS.register("oil_generator_block", () -> makeItem(ActuallyBlocks.blockOilGenerator));
    public static final RegistryObject<Item> itemFermentingBarrel = ITEMS.register("fermenting_barrel_block", () -> makeItem(ActuallyBlocks.blockFermentingBarrel));
    public static final RegistryObject<Item> itemRice = ITEMS.register("rice_block", () -> makeItem(ActuallyBlocks.blockRice));
    public static final RegistryObject<Item> itemCanola = ITEMS.register("canola_block", () -> makeItem(ActuallyBlocks.blockCanola));
    public static final RegistryObject<Item> itemFlax = ITEMS.register("flax_block", () -> makeItem(ActuallyBlocks.blockFlax));
    public static final RegistryObject<Item> itemCoffee = ITEMS.register("coffee_block", () -> makeItem(ActuallyBlocks.blockCoffee));
    public static final RegistryObject<Item> ITEM_BLACK_QUARTS = ITEMS.register("black_quartz_block", () -> makeItem(ActuallyBlocks.BLACK_QUARTS));
    public static final RegistryObject<Item> ITEM_BLACK_QUARTS_CHISELED = ITEMS.register("black_quartz_chiseled_block", () -> makeItem(ActuallyBlocks.BLACK_QUARTS_CHISELED));
    public static final RegistryObject<Item> ITEM_BLACK_QUARTS_PILLAR = ITEMS.register("black_quartz_pillar_block", () -> makeItem(ActuallyBlocks.BLACK_QUARTS_PILLAR));
    public static final RegistryObject<Item> ITEM_CHARCOAL = ITEMS.register("charcoal_block", () -> makeItem(ActuallyBlocks.CHARCOAL));
    public static final RegistryObject<Item> ITEM_ENDER_CASING = ITEMS.register("ender_casing_block", () -> makeItem(ActuallyBlocks.ENDER_CASING));
    public static final RegistryObject<Item> ITEM_ENDERPEARL = ITEMS.register("enderpearl_block", () -> makeItem(ActuallyBlocks.ENDERPEARL));
    public static final RegistryObject<Item> ITEM_IRON_CASING = ITEMS.register("iron_casing_block", () -> makeItem(ActuallyBlocks.IRON_CASING));
    public static final RegistryObject<Item> ITEM_IRON_CASING_SNOW = ITEMS.register("iron_casing_snow_block", () -> makeItem(ActuallyBlocks.IRON_CASING_SNOW));
    public static final RegistryObject<Item> ITEM_LAVA_FACTORY_CASE = ITEMS.register("lava_factory_case_block", () -> makeItem(ActuallyBlocks.LAVA_FACTORY_CASE));
    public static final RegistryObject<Item> ITEM_ORE_BLACK_QUARTS = ITEMS.register("ore_black_quartz_block", () -> makeItem(ActuallyBlocks.ORE_BLACK_QUARTS));
    public static final RegistryObject<Item> ITEM_WOOD_CASING = ITEMS.register("wood_casing_block", () -> makeItem(ActuallyBlocks.WOOD_CASING));
    public static final RegistryObject<Item> itemFeeder = ITEMS.register("feeder_block", () -> makeItem(ActuallyBlocks.blockFeeder));
    public static final RegistryObject<Item> itemGrinder = ITEMS.register("grinder_block", () -> makeItem(ActuallyBlocks.blockGrinder));
    public static final RegistryObject<Item> itemGrinderDouble = ITEMS.register("grinder_double_block", () -> makeItem(ActuallyBlocks.blockGrinderDouble));
    public static final RegistryObject<Item> itemFurnaceDouble = ITEMS.register("furnace_double_block", () -> makeItem(ActuallyBlocks.blockFurnaceDouble));
    public static final RegistryObject<Item> itemInputter = ITEMS.register("inputter_block", () -> makeItem(ActuallyBlocks.blockInputter));
    public static final RegistryObject<Item> itemInputterAdvanced = ITEMS.register("inputter_advanced_block", () -> makeItem(ActuallyBlocks.blockInputterAdvanced));
    public static final RegistryObject<Item> itemFishingNet = ITEMS.register("fishing_net_block", () -> makeItem(ActuallyBlocks.blockFishingNet));
    public static final RegistryObject<Item> itemFurnaceSolar = ITEMS.register("furnace_solar_block", () -> makeItem(ActuallyBlocks.blockFurnaceSolar));
    public static final RegistryObject<Item> itemHeatCollector = ITEMS.register("heat_collector_block", () -> makeItem(ActuallyBlocks.blockHeatCollector));
    public static final RegistryObject<Item> itemItemRepairer = ITEMS.register("item_repairer_block", () -> makeItem(ActuallyBlocks.blockItemRepairer));
    public static final RegistryObject<Item> itemGreenhouseGlass = ITEMS.register("greenhouse_glass_block", () -> makeItem(ActuallyBlocks.blockGreenhouseGlass));
    public static final RegistryObject<Item> itemBreaker = ITEMS.register("breaker_block", () -> makeItem(ActuallyBlocks.blockBreaker));
    public static final RegistryObject<Item> itemPlacer = ITEMS.register("placer_block", () -> makeItem(ActuallyBlocks.blockPlacer));
    public static final RegistryObject<Item> itemDropper = ITEMS.register("dropper_block", () -> makeItem(ActuallyBlocks.blockDropper));
    public static final RegistryObject<Item> itemFluidPlacer = ITEMS.register("fluid_placer_block", () -> makeItem(ActuallyBlocks.blockFluidPlacer));
    public static final RegistryObject<Item> itemFluidCollector = ITEMS.register("fluid_collector_block", () -> makeItem(ActuallyBlocks.blockFluidCollector));
    public static final RegistryObject<Item> itemCoffeeMachine = ITEMS.register("coffee_machine_block", () -> makeItem(ActuallyBlocks.blockCoffeeMachine));
    public static final RegistryObject<Item> itemPhantomBooster = ITEMS.register("phantom_booster_block", () -> makeItem(ActuallyBlocks.blockPhantomBooster));
    public static final RegistryObject<Item> itemQuartzWall = ITEMS.register("quartz_wall_block", () -> makeItem(ActuallyBlocks.blockQuartzWall));
    public static final RegistryObject<Item> itemChiseledQuartzWall = ITEMS.register("chiseled_quartz_wall_block", () -> makeItem(ActuallyBlocks.blockChiseledQuartzWall));
    public static final RegistryObject<Item> itemPillarQuartzWall = ITEMS.register("pillar_quartz_wall_block", () -> makeItem(ActuallyBlocks.blockPillarQuartzWall));
    public static final RegistryObject<Item> itemQuartzStair = ITEMS.register("quartz_stair_block", () -> makeItem(ActuallyBlocks.blockQuartzStair));
    public static final RegistryObject<Item> itemChiseledQuartzStair = ITEMS.register("chiseled_quartz_stair_block", () -> makeItem(ActuallyBlocks.blockChiseledQuartzStair));
    public static final RegistryObject<Item> itemPillarQuartzStair = ITEMS.register("pillar_quartz_stair_block", () -> makeItem(ActuallyBlocks.blockPillarQuartzStair));
    public static final RegistryObject<Item> itemQuartzSlab = ITEMS.register("quartz_slab_block", () -> makeItem(ActuallyBlocks.blockQuartzSlab));
    public static final RegistryObject<Item> itemChiseledQuartzSlab = ITEMS.register("chiseled_quartz_slab_block", () -> makeItem(ActuallyBlocks.blockChiseledQuartzSlab));
    public static final RegistryObject<Item> itemPillarQuartzSlab = ITEMS.register("pillar_quartz_slab_block", () -> makeItem(ActuallyBlocks.blockPillarQuartzSlab));

    private static BlockItem makeItem(Supplier<? extends Block> block) {
        return new BlockItem(block.get(), new Item.Properties().group(ActuallyAdditions.ACTUALLY_GROUP));
    }
}
